{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/fahrettin/Desktop/weather-app/odev-3-weather-app-fyilmazy/weather-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport CitySelector from \"./components/CitySelector\";\nconst APIKEY = process.env.REACT_APP_API_KEY;\n\nfunction App() {\n  _s();\n\n  const [lang, setLang] = useState(\"tr\");\n  const [localSuf, setLocalSuf] = useState(\"tr-TR\");\n  const [city, setCity] = useState(\"istanbul\");\n  const [weatherData, setWeatherData] = useState({});\n\n  const langHandler = () => {\n    if (lang === \"tr\") {\n      setLang(\"en\");\n      setLocalSuf(\"en-EN\");\n    } else if (lang === \"en\") {\n      setLang(\"tr\");\n      setLocalSuf(\"tr-TR\");\n    }\n  };\n\n  const langText = lang.toUpperCase();\n  console.log(weatherData.data);\n  useEffect(() => {\n    async () => {\n      try {\n        const response = await axios.get(`https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&country=turkey&days=8&units=C&lang=${lang}&key=${APIKEY}`).then(res => setWeatherData(res));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  }, [city]);\n  const myDate = new Date();\n  console.log(\"This is it :\", myDate.toLocaleString({\n    localSuf\n  }, {\n    weekday: \"long\"\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: langHandler,\n      children: langText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cities\",\n        children: \"City: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CitySelector, {\n        city: city,\n        setCity: setCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pDgLwI4R7Tum5Pm/fZYMoOxE/uQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/fahrettin/Desktop/weather-app/odev-3-weather-app-fyilmazy/weather-app/src/App.js"],"names":["useState","useEffect","axios","CitySelector","APIKEY","process","env","REACT_APP_API_KEY","App","lang","setLang","localSuf","setLocalSuf","city","setCity","weatherData","setWeatherData","langHandler","langText","toUpperCase","console","log","data","response","get","then","res","err","myDate","Date","toLocaleString","weekday"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,UAAD,CAAhC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMiB,WAAW,GAAG,MAAM;AACxB,QAAIR,IAAI,KAAK,IAAb,EAAmB;AACjBC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,WAAW,CAAC,OAAD,CAAX;AACD,KAHD,MAGO,IAAIH,IAAI,KAAK,IAAb,EAAmB;AACxBC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,WAAW,CAAC,OAAD,CAAX;AACD;AACF,GARD;;AASA,QAAMM,QAAQ,GAAGT,IAAI,CAACU,WAAL,EAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAW,CAACO,IAAxB;AACArB,EAAAA,SAAS,CAAC,MAAM;AACd,gBAAY;AACV,UAAI;AACF,cAAMsB,QAAQ,GAAG,MAAMrB,KAAK,CACzBsB,GADoB,CAElB,sDAAqDX,IAAK,uCAAsCJ,IAAK,QAAOL,MAAO,EAFjG,EAIpBqB,IAJoB,CAIdC,GAAD,IAASV,cAAc,CAACU,GAAD,CAJR,CAAvB;AAKD,OAND,CAME,OAAOC,GAAP,EAAY;AACZP,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD;AACF,KAVD;AAWD,GAZQ,EAYN,CAACd,IAAD,CAZM,CAAT;AAcA,QAAMe,MAAM,GAAG,IAAIC,IAAJ,EAAf;AACAT,EAAAA,OAAO,CAACC,GAAR,CACE,cADF,EAEEO,MAAM,CAACE,cAAP,CACE;AAAEnB,IAAAA;AAAF,GADF,EAEE;AACEoB,IAAAA,OAAO,EAAE;AADX,GAFF,CAFF;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEd,WAAjB;AAAA,gBAA+BC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEL,IAApB;AAA0B,QAAA,OAAO,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAnDQN,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport CitySelector from \"./components/CitySelector\";\n\nconst APIKEY = process.env.REACT_APP_API_KEY;\n\nfunction App() {\n  const [lang, setLang] = useState(\"tr\");\n  const [localSuf, setLocalSuf] = useState(\"tr-TR\");\n  const [city, setCity] = useState(\"istanbul\");\n  const [weatherData, setWeatherData] = useState({});\n\n  const langHandler = () => {\n    if (lang === \"tr\") {\n      setLang(\"en\");\n      setLocalSuf(\"en-EN\");\n    } else if (lang === \"en\") {\n      setLang(\"tr\");\n      setLocalSuf(\"tr-TR\");\n    }\n  };\n  const langText = lang.toUpperCase();\n  console.log(weatherData.data);\n  useEffect(() => {\n    async () => {\n      try {\n        const response = await axios\n          .get(\n            `https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&country=turkey&days=8&units=C&lang=${lang}&key=${APIKEY}`\n          )\n          .then((res) => setWeatherData(res));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  }, [city]);\n\n  const myDate = new Date();\n  console.log(\n    \"This is it :\",\n    myDate.toLocaleString(\n      { localSuf },\n      {\n        weekday: \"long\",\n      }\n    )\n  );\n  return (\n    <div className=\"App\">\n      <h1>Weather App</h1>\n      <button onClick={langHandler}>{langText}</button>\n      <form>\n        <label htmlFor=\"cities\">City: </label>\n        <CitySelector city={city} setCity={setCity} />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
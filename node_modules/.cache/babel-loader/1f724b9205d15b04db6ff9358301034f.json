{"ast":null,"code":"import axios from \"axios\";\nconst APIKEY = process.env.REACT_APP_API_KEY;\nexport let cityDisplay;\nexport const getData = async (city, lang) => {\n  try {\n    const theData = await axios.get(`https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&country=turkey&days=8&units=C&lang=${lang}&key=${APIKEY}`);\n    console.log(\"Gelen ilk:\", theData.data);\n    cityDisplay = theData.data.city_name;\n    const daysInTr = [\"Pazar\", \"Pazartesi\", \"Salı\", \"Çarşamba\", \"Perşembe\", \"Cuma\", \"Cumartesi\"];\n    const daysInEn = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const dayCr = new Date(theData.valid_date);\n    const dateTry = lang === \"tr\" ? daysInTr[dayCr.getDay()] : daysInEn[dayCr.getDay()];\n    const resArray = theData.data.data.map(item => {\n      return {\n        dateTime: dateTry,\n        maxTemp: item.app_max_temp,\n        minTemp: item.app_min_temp,\n        windDirec: item.wind_dir,\n        windSpeed: item.wind_spd,\n        dewPoint: item.dewpt,\n        description: item.weather.description,\n        iconCode: item.weather.icon\n      };\n    });\n    console.log(\"1resArray\", resArray);\n    return resArray;\n  } catch (e) {\n    console.log(e);\n  }\n};","map":{"version":3,"sources":["/Users/fahrettin/Desktop/weather-app/odev-3-weather-app-fyilmazy/weather-app/src/components/Test.js"],"names":["axios","APIKEY","process","env","REACT_APP_API_KEY","cityDisplay","getData","city","lang","theData","get","console","log","data","city_name","daysInTr","daysInEn","dayCr","Date","valid_date","dateTry","getDay","resArray","map","item","dateTime","maxTemp","app_max_temp","minTemp","app_min_temp","windDirec","wind_dir","windSpeed","wind_spd","dewPoint","dewpt","description","weather","iconCode","icon","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;AACA,OAAO,IAAIC,WAAJ;AACP,OAAO,MAAMC,OAAO,GAAG,OAAOC,IAAP,EAAaC,IAAb,KAAsB;AAC3C,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CACnB,sDAAqDH,IAAK,uCAAsCC,IAAK,QAAOP,MAAO,EADhG,CAAtB;AAGAU,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,OAAO,CAACI,IAAlC;AACAR,IAAAA,WAAW,GAAGI,OAAO,CAACI,IAAR,CAAaC,SAA3B;AACA,UAAMC,QAAQ,GAAG,CACf,OADe,EAEf,WAFe,EAGf,MAHe,EAIf,UAJe,EAKf,UALe,EAMf,MANe,EAOf,WAPe,CAAjB;AASA,UAAMC,QAAQ,GAAG,CACf,QADe,EAEf,QAFe,EAGf,SAHe,EAIf,WAJe,EAKf,UALe,EAMf,QANe,EAOf,UAPe,CAAjB;AASA,UAAMC,KAAK,GAAG,IAAIC,IAAJ,CAAST,OAAO,CAACU,UAAjB,CAAd;AACA,UAAMC,OAAO,GACXZ,IAAI,KAAK,IAAT,GAAgBO,QAAQ,CAACE,KAAK,CAACI,MAAN,EAAD,CAAxB,GAA2CL,QAAQ,CAACC,KAAK,CAACI,MAAN,EAAD,CADrD;AAEA,UAAMC,QAAQ,GAAGb,OAAO,CAACI,IAAR,CAAaA,IAAb,CAAkBU,GAAlB,CAAuBC,IAAD,IAAU;AAC/C,aAAO;AACLC,QAAAA,QAAQ,EAAEL,OADL;AAELM,QAAAA,OAAO,EAAEF,IAAI,CAACG,YAFT;AAGLC,QAAAA,OAAO,EAAEJ,IAAI,CAACK,YAHT;AAILC,QAAAA,SAAS,EAAEN,IAAI,CAACO,QAJX;AAKLC,QAAAA,SAAS,EAAER,IAAI,CAACS,QALX;AAMLC,QAAAA,QAAQ,EAAEV,IAAI,CAACW,KANV;AAOLC,QAAAA,WAAW,EAAEZ,IAAI,CAACa,OAAL,CAAaD,WAPrB;AAQLE,QAAAA,QAAQ,EAAEd,IAAI,CAACa,OAAL,CAAaE;AARlB,OAAP;AAUD,KAXgB,CAAjB;AAYA5B,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBU,QAAzB;AACA,WAAOA,QAAP;AACD,GAzCD,CAyCE,OAAOkB,CAAP,EAAU;AACV7B,IAAAA,OAAO,CAACC,GAAR,CAAY4B,CAAZ;AACD;AACF,CA7CM","sourcesContent":["import axios from \"axios\";\n\nconst APIKEY = process.env.REACT_APP_API_KEY;\nexport let cityDisplay;\nexport const getData = async (city, lang) => {\n  try {\n    const theData = await axios.get(\n      `https://api.weatherbit.io/v2.0/forecast/daily?city=${city}&country=turkey&days=8&units=C&lang=${lang}&key=${APIKEY}`\n    );\n    console.log(\"Gelen ilk:\", theData.data);\n    cityDisplay = theData.data.city_name;\n    const daysInTr = [\n      \"Pazar\",\n      \"Pazartesi\",\n      \"Salı\",\n      \"Çarşamba\",\n      \"Perşembe\",\n      \"Cuma\",\n      \"Cumartesi\",\n    ];\n    const daysInEn = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    const dayCr = new Date(theData.valid_date);\n    const dateTry =\n      lang === \"tr\" ? daysInTr[dayCr.getDay()] : daysInEn[dayCr.getDay()];\n    const resArray = theData.data.data.map((item) => {\n      return {\n        dateTime: dateTry,\n        maxTemp: item.app_max_temp,\n        minTemp: item.app_min_temp,\n        windDirec: item.wind_dir,\n        windSpeed: item.wind_spd,\n        dewPoint: item.dewpt,\n        description: item.weather.description,\n        iconCode: item.weather.icon,\n      };\n    });\n    console.log(\"1resArray\", resArray);\n    return resArray;\n  } catch (e) {\n    console.log(e);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}